version: "3.8"

services:
  backend:
    image: api
    build:
      context: .
      dockerfile: Dockerfile  # Path to the backend Dockerfile
    ports:
      - "5221:5221"
    environment:
      ASPNETCORE_ENVIRONMENT: Development
    depends_on:
      postgres:
        condition: service_healthy
    networks:
      - app-network

  frontend:
    image: angular
    build:
      context: ./HCM-Client
      dockerfile: Dockerfile
    ports:
      - "4200:80"
    depends_on:
      - backend
    networks:
      - app-network

  postgres:
    image: postgres:latest
    container_name: postgres
    restart: unless-stopped
    healthcheck:
      test: ["CMD-SHELL", "pg_isready -U admin -d HCM"]
      interval: 5s
      timeout: 3s
      retries: 5
    environment:
      POSTGRES_USER: admin
      POSTGRES_PASSWORD: secret123
      POSTGRES_DB: HCM
    ports:
      - "5433:5432"
    networks:
      - app-network
  
  prometheus:
    image: prom/prometheus
    volumes:
      - ./prometheus.yml:/etc/prometheus/prometheus.yml
    ports:
      - "9090:9090"
    networks:
      - app-network
    depends_on:
      - backend

  grafana:
    image: grafana/grafana
    ports:
      - "3000:3000"
    networks:
      - app-network
    volumes:
      - ./grafana/dashboards:/etc/grafana/provisioning/dashboards
      - ./grafana/dashboards:/etc/grafana/provisioning/dashboards/json
      - ./grafana/datasources:/etc/grafana/provisioning/datasources
    depends_on:
      - prometheus
  
volumes:
  postgres_data:

networks:
  app-network: 
    driver: bridge
